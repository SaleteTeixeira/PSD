/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package psd.client;

/**
 * @author diogo
 */
public class InvestorPage extends javax.swing.JFrame {

    /**
     * Creates new form InvestorPage
     * @param username
     */
    public InvestorPage(String username) {
        this.username = username;
        initComponents();
        refresh();
    }

    private void refresh() {
        Messages.AuctionList alist = ErlangBridge.getInstance().auctionList();
        Messages.FixedList flist = ErlangBridge.getInstance().fixedList();
        int count = alist.getEntryCount();
        this.auctionsListArea.setText("");
        for (int i = 0; i < count; ++i) {
            Messages.AuctionEntry entry = alist.getEntry(i);
            this.auctionsListArea.append(entry.getCompany() 
                    + '\t'
                    + entry.getAmount()
                    + '\t' 
                    + entry.getInterest() 
                    + '\n');
        }
        count = flist.getEntryCount();
        this.fixedListArea.removeAll();
        for (int i = 0; i < count; ++i) {
            Messages.FixedEntry entry = flist.getEntry(i);
            this.fixedListArea.append(entry.getCompany() 
                    + '\t'
                    + entry.getAmount()
                    + '\t' 
                    + entry.getInterest() 
                    + '\n');
        }
    } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        auctionsNotiPane = new javax.swing.JScrollPane();
        auctionsNotiArea = new javax.swing.JTextArea();
        fixedNotiPane = new javax.swing.JScrollPane();
        fixedNotiArea = new javax.swing.JTextArea();
        companyFieldAuction = new javax.swing.JTextField();
        interestFieldAuction = new javax.swing.JTextField();
        bidButton = new javax.swing.JButton();
        companyFieldFixed = new javax.swing.JTextField();
        amountFieldFixed = new javax.swing.JTextField();
        subscribeButton = new javax.swing.JButton();
        amountFieldAuction = new javax.swing.JTextField();
        fixedListPane = new javax.swing.JScrollPane();
        fixedListArea = new javax.swing.JTextArea();
        auctionsListPane = new javax.swing.JScrollPane();
        auctionsListArea = new javax.swing.JTextArea();
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        refresh = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        quit = new javax.swing.JMenuItem();
        notifications = new javax.swing.JMenu();
        subscribe = new javax.swing.JMenuItem();
        unsubscribe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 500));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setText("Loan Auctions");

        jLabel2.setText("Fixed Rate Loans");

        auctionsNotiArea.setColumns(20);
        auctionsNotiArea.setRows(5);
        auctionsNotiPane.setViewportView(auctionsNotiArea);

        fixedNotiArea.setColumns(20);
        fixedNotiArea.setRows(5);
        fixedNotiPane.setViewportView(fixedNotiArea);

        companyFieldAuction.setText("Company");
        companyFieldAuction.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                companyFieldAuctionFocusGained(evt);
            }
        });
        companyFieldAuction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyFieldAuctionActionPerformed(evt);
            }
        });

        interestFieldAuction.setText("Interest");
        interestFieldAuction.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                interestFieldAuctionFocusGained(evt);
            }
        });

        bidButton.setText("Bid");
        bidButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bidButtonMouseClicked(evt);
            }
        });

        companyFieldFixed.setText("Company");
        companyFieldFixed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                companyFieldFixedFocusGained(evt);
            }
        });

        amountFieldFixed.setText("Amount");
        amountFieldFixed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountFieldFixedFocusGained(evt);
            }
        });
        amountFieldFixed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldFixedActionPerformed(evt);
            }
        });

        subscribeButton.setText("Subscribe");
        subscribeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subscribeButtonMouseClicked(evt);
            }
        });

        amountFieldAuction.setText("Amount");
        amountFieldAuction.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountFieldAuctionFocusGained(evt);
            }
        });

        fixedListArea.setColumns(20);
        fixedListArea.setRows(5);
        fixedListPane.setViewportView(fixedListArea);

        auctionsListArea.setColumns(20);
        auctionsListArea.setRows(5);
        auctionsListPane.setViewportView(auctionsListArea);

        file.setText("File");

        refresh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        file.add(refresh);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Diret√≥rio");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        file.add(jMenuItem1);

        logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        file.add(logout);

        quit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });
        file.add(quit);

        menu.add(file);

        notifications.setText("Notifications");

        subscribe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        subscribe.setText("Subscribe Selected");
        notifications.add(subscribe);

        unsubscribe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        unsubscribe.setText("Unsubscribe Selected");
        notifications.add(unsubscribe);

        menu.add(notifications);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(auctionsNotiPane, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(auctionsListPane))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(companyFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(interestFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(amountFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bidButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(companyFieldFixed, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(amountFieldFixed, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(subscribeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fixedNotiPane, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                            .addComponent(fixedListPane))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(auctionsListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(auctionsNotiPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fixedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fixedNotiPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bidButton)
                        .addComponent(amountFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(interestFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(companyFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(subscribeButton)
                        .addComponent(amountFieldFixed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(companyFieldFixed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        ErlangBridge.getInstance().logout(this.username);
        ErlangBridge.clean();
        this.setVisible(false);
        new LoginPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshActionPerformed

    private void companyFieldAuctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyFieldAuctionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyFieldAuctionActionPerformed

    private void amountFieldFixedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldFixedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountFieldFixedActionPerformed

    private void bidButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bidButtonMouseClicked
        // TODO add your handling code here:
        String company;
        try {
            company = this.companyFieldAuction.getText();
        } catch(NumberFormatException e) {
            this.auctionsNotiArea.append("Error parsing company\n");
            return;
        }
        int amount;
        try {
            amount = Integer.parseInt(this.amountFieldAuction.getText());
            if (amount <= 0) {
                throw new NumberFormatException();
            }
        } catch(NumberFormatException e) {
            this.auctionsNotiArea.append("Error parsing amount\n");
            return;
        }
        double interest;
        try {
            interest = Double.parseDouble(this.interestFieldAuction.getText());
            if (interest <= 0) {
                throw new NumberFormatException();
            }
        } catch(NumberFormatException e) {
            this.auctionsNotiArea.append("Error parsing interest\n");
            return;
        }
        final Messages.Reply reply = ErlangBridge.getInstance().bidAuction(this.username, company, amount, interest);
        if (reply.getResult()) {
            this.auctionsNotiArea.append("Successfull bid in company "
                    + company
                    + " with amount "
                    + amount
                    + " at interest "
                    + interest + "\n"
            );
        } else {
            this.auctionsNotiArea.append(reply.getMessage() + "\n");
        }
    }//GEN-LAST:event_bidButtonMouseClicked

    private void subscribeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subscribeButtonMouseClicked
        // TODO add your handling code here:
        String company;
        try {
            company = this.companyFieldFixed.getText();
        } catch(NumberFormatException e) {
            this.fixedNotiArea.append("Error parsing company\n");
            return;
        }
        int amount;
        try {
            amount = Integer.parseInt(this.amountFieldFixed.getText());
            if (amount <= 0) {
                throw new NumberFormatException();
            }
        } catch(NumberFormatException e) {
            this.fixedNotiArea.append("Error parsing amount\n");
            return;
        }
        final Messages.Reply reply = ErlangBridge.getInstance().subscribeFixed(this.username, company, amount);
        if (reply.getResult()) {
            this.fixedNotiArea.append("Successfull subscription in company "
                    + company
                    + " with amount "
                    + amount
                    + "\n"
            );
        } else {
            this.fixedNotiArea.append(reply.getMessage() + "\n");
        }
    }//GEN-LAST:event_subscribeButtonMouseClicked

    private void companyFieldAuctionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_companyFieldAuctionFocusGained
        // TODO add your handling code here:
        if (this.companyFieldAuction.getText().equals("Company")) {
            companyFieldAuction.setText("");
        }
    }//GEN-LAST:event_companyFieldAuctionFocusGained

    private void interestFieldAuctionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interestFieldAuctionFocusGained
        // TODO add your handling code here:
        if (this.interestFieldAuction.getText().equals("Interest")) {
            interestFieldAuction.setText("");
        }
    }//GEN-LAST:event_interestFieldAuctionFocusGained

    private void amountFieldAuctionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldAuctionFocusGained
        // TODO add your handling code here:
        if (this.amountFieldAuction.getText().equals("Amount")) {
            amountFieldAuction.setText("");
        }
    }//GEN-LAST:event_amountFieldAuctionFocusGained

    private void companyFieldFixedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_companyFieldFixedFocusGained
        // TODO add your handling code here:
        if (this.companyFieldFixed.getText().equals("Company")) {
            companyFieldFixed.setText("");
        }
    }//GEN-LAST:event_companyFieldFixedFocusGained

    private void amountFieldFixedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldFixedFocusGained
        // TODO add your handling code here:
        if (this.amountFieldFixed.getText().equals("Amount")) {
            amountFieldFixed.setText("");
        }
    }//GEN-LAST:event_amountFieldFixedFocusGained

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new DiretorioPage().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private final String username;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountFieldAuction;
    private javax.swing.JTextField amountFieldFixed;
    private javax.swing.JTextArea auctionsListArea;
    private javax.swing.JScrollPane auctionsListPane;
    private javax.swing.JTextArea auctionsNotiArea;
    private javax.swing.JScrollPane auctionsNotiPane;
    private javax.swing.JButton bidButton;
    private javax.swing.JTextField companyFieldAuction;
    private javax.swing.JTextField companyFieldFixed;
    private javax.swing.JMenu file;
    private javax.swing.JTextArea fixedListArea;
    private javax.swing.JScrollPane fixedListPane;
    private javax.swing.JTextArea fixedNotiArea;
    private javax.swing.JScrollPane fixedNotiPane;
    private javax.swing.JTextField interestFieldAuction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem logout;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu notifications;
    private javax.swing.JMenuItem quit;
    private javax.swing.JMenuItem refresh;
    private javax.swing.JMenuItem subscribe;
    private javax.swing.JButton subscribeButton;
    private javax.swing.JMenuItem unsubscribe;
    // End of variables declaration//GEN-END:variables
}
